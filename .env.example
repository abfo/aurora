# Copy this file to .env and fill in your local values.
# Do NOT commit your real secrets.

###
# ASSISTANT CONFIGURATION (REQUIRED)

# Aurora uses the OpenAI Realtime and TTS APIs, an OpenAI API key is required.
# https://platform.openai.com/
OPENAI_API_KEY=

# Aurora uses Picovoice Porcupine for wake word detetection. You must specificy an API key
# and a wake word model file (.ppn). The model is architecture dependent and is easy to generate
# using Picovoice console.
# https://picovoice.ai/platform/porcupine/
PICO_API_KEY=
WAKE_WORD_PATH=

# Audio input and output devices IDs. Aurora logs available devices at startup, set LOG_LEVEL to
# INFO and run main.py to see the list of devices.
INPUT_DEVICE_ID=
OUTPUT_DEVICE_ID=

# Path to a file containing instructions for the realtime model. There is a basic default but
# creating a custom version is highly recommended. 
# https://platform.openai.com/docs/guides/realtime-models-prompting
AGENT_INSTRUCTIONS_PATH=

# Voice to use for realtime and TTS speach. Defaults to 'shimmer'
# https://platform.openai.com/docs/api-reference/realtime_server_events/session/updated
AGENT_VOICE=

###
# UI CONFIGURATION (OPTIONAL)

# The default Debug UI implemention reports interface state changes to the log. The Braincraft
# implementation is designed for a Raspberry PI 4 with an AdaFruit BrainCraft HAT - see the 
# project README.md for more information about this configuration. Debug should work on any device
# that has a microphone and speaker available.
UI=Debug

# If using Braincraft ALARM_FONT_PATH is the font to use for timer notifications and the three image
# paths are used for the talk, listen and sleep states.
ALARM_FONT_PATH=
IMAGE_TALK_PATH=
IMAGE_LISTEN_PATH=
IMAGE_SLEEP_PATH=

###
# TOOL CONFIGURATION (OPTIONAL)

# Perplexity Sonar tool
# Provides Aurora with the ability to look up information using the Perplexity Sonar API. Set your
# PERPLEXITY_API_KEY to enable this tool.

PERPLEXITY_API_KEY=

# Cheese tool 
# Resolved disputes between two children using the concept of a 'cheese night'. If it's a child's 
# cheese night they win any argument and get their first choice of chores. Currently only supports
# two children and requires KID_NAME_A and KID_NAME_B to be set.

KID_NAME_A=
KID_NAME_B=

# Todoist tool
# Todoist API key and project IDs for organizing tasks. Leave blank to disable.
# Due details accept natural language (e.g., "Today", "tomorrow 6pm").

TODOIST_API_KEY=
TODOIST_TODO_PROJECT_ID=
TODOIST_SHOPPING_PROJECT_ID=
TODOIST_TODO_DUE_DETAILS=Today
TODOIST_SHOPPING_DUE_DETAILS=Saturday

###
# LOGGING (OPTIONAL)

# LOG_LEVEL may be set to DEBUG, INFO, WARNING, ERROR, or CRITICAL. Set LOG_FILE to output logs to a file.

LOG_LEVEL=INFO
LOG_FILE=
